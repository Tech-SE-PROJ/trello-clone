@using Classes;
<JobsContainer Jobs="Jobs" OnStatusUpdated="HandleStatusUpdated">
    <JobList ListStatus="JobStatuses.Todo" AllowedStatuses="@(new TaskStatuses[] { TaskStatuses.Todo})" />
    <JobList ListStatus="JobStatuses.In_Progress" AllowedStatuses="@(new TaskStatuses[] { TaskStatuses.In_Progress})" />
    <JobList ListStatus="JobStatuses.Completed" AllowedStatuses="@(new TaskStatuses[] { TaskStatuses.Completed })" />
</JobsContainer>

@code {
    List<TaskModel> Jobs = new List<TaskModel>();

    protected override void OnInitialized()
    {
        Jobs.Add(new TaskModel { Id = 1, Description = "Mow the lawn", Status = TaskStatuses.Todo, LastUpdated = DateTime.Now });
        Jobs.Add(new TaskModel { Id = 2, Description = "Go to the gym", Status = TaskStatuses.Todo, LastUpdated = DateTime.Now });
        Jobs.Add(new TaskModel { Id = 3, Description = "Call Ollie", Status = TaskStatuses.Todo, LastUpdated = DateTime.Now });
        Jobs.Add(new TaskModel { Id = 4, Description = "Fix bike tyre", Status = TaskStatuses.Todo, LastUpdated = DateTime.Now });
        Jobs.Add(new TaskModel { Id = 5, Description = "Finish blog post", Status = TaskStatuses.Todo, LastUpdated = DateTime.Now });
    }

    void HandleStatusUpdated(TaskModel updatedTask)
    {
        Console.WriteLine(updatedTask.Description);
    }
}
