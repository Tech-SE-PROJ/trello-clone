@page "/boards"
@using trello_clone.Shared.Classes
@using Microsoft.AspNetCore.Components
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http

<PageTitle>Boards</PageTitle>

<h1>Boards</h1>
@*
    TODO:
        Make the button in the EditForm make a new MudCard
*@
<EditForm class="form-check-inline my-2" Model="newBoardName" OnValidSubmit="() => AddBoard(newBoardName)">
	<InputText class="form-control mx-2" @bind-Value="newBoardName" />
    <MudButton ButtonType="ButtonType.Submit"  StartIcon="@Icons.Material.Filled.Add" FullWidth="true" Class="rounded-lg py-2">Add Board</MudButton>
</EditForm>

<MudCard Outlined="true" Style="width: 20%">
	<MudCardContent>
		<MudText>Name of board</MudText>
		<MudText Typo="Typo.body2">Description of board (optional)</MudText>
	</MudCardContent>
	<MudCardActions>
		<MudButton Href="boards/default"
				   Target="_self"
				   Variant="Variant.Filled"
				   Color="Color.Primary">		   
			Enter
		</MudButton>
	</MudCardActions>
</MudCard>

<body>
    @if (boards == null)
    {
        <p><em>... loading</em></p>
    }
    else
    {
        @foreach (var board in boards)
        {
            <div>
                <p>@board.Name</p>
                <p>@board.Columns.First().Name</p>
            </div>
        }
    }
</body>

@code {
    private IEnumerable<Board>? boards;
    private string newBoardName = "";

    protected override async Task OnInitializedAsync()
    {
        await GetBoards();
    }

    private async Task GetBoards()
    {
        boards = await Http.GetFromJsonAsync<Board[]>("Boards/BoardList");
    }

    private async Task AddBoard(string boardName)
    {
        await Http.GetAsync($"Boards/Addboard/{boardName}");
        await GetBoards();
    }
}
