@using Classes;
<div class="jobs-container">
    <CascadingValue Value="this">
        @ChildContent
    </CascadingValue>
</div>
@code {
    [Parameter] public List<TaskModel>? Events { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public EventCallback<TaskModel> OnStatusUpdated { get; set; }

    public Classes.TaskModel? Payload { get; set; }

    public async Task UpdateTask(TaskStatuses newStatus)
    {
        var task = Events.SingleOrDefault(x => x.Id == Payload.Id);

        if(task != null)
        {
            task.Status = newStatus;
            task.LastUpdated = DateTime.Now;
            await OnStatusUpdated.InvokeAsync(Payload);
        }
    }
}
